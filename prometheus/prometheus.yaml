apiVersion: v1
kind: Namespace
metadata:
  name: monitoring

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: monitoring

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.retention.time=12h"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: prometheus-data
              mountPath: /prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-server-conf
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-pvc

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  namespace: monitoring
data:
  prometheus.yml: |-
    global:
      scrape_interval: 15s
    scrape_configs:
    - job_name: 'products-service-monitoring'
      metrics_path: /actuator/prometheus
      static_configs:
      - targets: ['products-service-monitoring:8080']
    - job_name: 'postgres-exporter-service'
      metrics_path: /metrics 
      static_configs:
      - targets: ['postgres-exporter-service:9187']

---

apiVersion: v1
kind: Pod
metadata:
  name: postgres-exporter-pod-prometheus
  namespace: monitoring
  labels:
    app: postgres-exporter
spec:
  containers:
    - name: postgres-exporter
      image: quay.io/prometheuscommunity/postgres-exporter:v0.13.1
      ports:
        - containerPort: 9187
      env:
        - name: DATA_SOURCE_NAME
          value: "postgresql://postgres:1234@postgres-service:5432/products?sslmode=disable"

---

apiVersion: v1
kind: Pod
metadata:
  name: products-pod-readiness-prometheus
  namespace: monitoring
  labels:
    app: products-prometheus
spec:
  containers:
    - name: products
      image: douglasjunio/aplicacaopos:tagname
      ports:
        - containerPort: 8080
      env:
        - name: DB_URL
          value: "jdbc:postgresql://postgres-service:5432/products"
        - name: DB_USERNAME
          value: "postgres"
        - name: DB_PASSWORD
          value: "1234"
      readinessProbe:
        httpGet:
          path: /custom-health
          port: 8080
        initialDelaySeconds: 5
        periodSeconds: 10

---

apiVersion: v1
kind: Pod
metadata:
  name: postgres-pod-prometheus
  namespace: monitoring
  labels:
    app: postgres-prometheus
spec:
  containers:
    - name: postgres
      image: postgres:latest
      env:
        - name: POSTGRES_DB
          value: "products"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "1234"
      ports:
        - containerPort: 5432
      volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
  volumes:
    - name: postgres-data
      emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: monitoring
spec:
  selector:
    app: postgres-prometheus
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---

apiVersion: v1
kind: Service
metadata:
  name: products-service-monitoring
  namespace: monitoring
spec:
  selector:
    app: products-prometheus
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: products-service-node-port
  namespace: monitoring
spec:
  type: NodePort
  selector:
    app: products-prometheus
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30001


---

apiVersion: v1
kind: Service
metadata:
  name: postgres-exporter-service
  namespace: monitoring
spec:
  selector:
    app: postgres-exporter
  ports:
    - protocol: TCP
      port: 9187
      targetPort: 9187
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  name: grafana-service-clusterip
  namespace: monitoring
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  name: grafana-service-nodeport
  namespace: monitoring
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: 30002

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus-service-clusterip
  namespace: monitoring
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  type: ClusterIP

---

